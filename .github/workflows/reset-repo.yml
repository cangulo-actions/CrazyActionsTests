name: üõéÔ∏è reset repo
run-name: >
  üõéÔ∏è reset repo ${{ inputs.semver-version != '' && format('semver-version: {0}', inputs.semver-version) || '' }} 
    ${{ inputs.enable-ci-workflow && 'enable ci workflow' || 'disable ci workflow' }}
on:
  workflow_dispatch:
    inputs:
      semver-version:
        description: 'cangulo-actions/semver version to test'
        type: string
        required: false
        default: ''
      enable-ci-workflow:
        description: 'enable ci.yml workflow'
        type: boolean
        required: false
        default: false

jobs:
  reset:
    name: üí£Ô∏è reset repo
    runs-on: ubuntu-latest
    env:
      GH_TOKEN: ${{ secrets.GH_AUTOMATION_TOKEN }}
    steps:
      - name: Printing inputs in the summary
        uses: actions/github-script@v7.0.1
        env:
          INPUTS: ${{ toJson(inputs) }}
        with:
          script: |
            const inputs = JSON.parse(process.env.INPUTS)
            console.log('inputs', inputs)

            core.summary
              .addHeading('Inputs')
              .addCodeBlock(JSON.stringify(inputs, null, 2), 'json')
              .write()

      - name: checkout
        uses: actions/checkout@v4
        with:
          ref: main
          token: ${{ secrets.GH_AUTOMATION_TOKEN }} 
          fetch-depth: 0

      - name: configuring git
        run: |
          git config user.name "cangulo-actions-reset-repo[bot]"
          git config user.email "cangulo-actions-reset-repo[bot]@users.noreply.github.com"

      - name: delete all the remote tags using the GH cli
        run: |
          echo "tags:"
          git ls-remote --tags origin 

          remote_tags=($(gh api repos/${{ github.repository }}/git/refs/tags | jq -r '.[].ref' | awk -F '/' '{print $NF}'))
          for tag in "${remote_tags[@]}"
          do
            echo "deleting remote tag ${tag}"
            gh api repos/${{ github.repository }}/git/refs/tags/${tag} -X DELETE
          done

      - name: delete all the GH releases
        run: |
          gh_releases=($(gh release list | awk '{print $1}'))
          for release in "${gh_releases[@]}"
          do
            echo "deleting release ${release}"
            gh release delete "${release}" --yes
          done
          
      - name: reset files
        run: |
          # delete version.json and CHANGELOG.md if exists
          
          git rm -f version.json CHANGELOG.md || true
          scope_folders=( "src" "terraform" )
          for folder in "${scope_folders[@]}"
          do
            # delete version and CHANGELOG.md
            git rm -f "${folder}/version.json" "${folder}/CHANGELOG.md" || true
          done

      - name: update cd.yml with semver version
        if: ${{ inputs.semver-version != '' }}
        env:
          SEMVER_VERSION: ${{ inputs.semver-version }}
        run: |
          sed -i "s/cangulo-actions\/semver@.*/cangulo-actions\/semver@${SEMVER_VERSION}/g" .github/workflows/cd.yml

      - name: enable/disable ci.yml workflow
        run: |
          gh workflow ${{ inputs.enable-ci-workflow && 'enable' || 'disable' }} ci.yml

      - name: commit changes
        run: |
          if [[ -n $(git status -s) ]]; then
            git status -s
            git commit -a -m "RESET REPO [skip ci]"
            git push origin main
          else
            echo "No changes to commit."
          fi
